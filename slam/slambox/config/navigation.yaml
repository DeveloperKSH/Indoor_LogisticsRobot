amcl:
  ros__parameters:
    # Odometry motion model type.
    robot_model_type: nav2_amcl::DifferentialMotionModel
    # Expected process noise in odometry’s rotation estimate from rotation.
    alpha1: 0.1
    # Expected process noise in odometry’s rotation estimate from translation.
    alpha2: 0.05
    # Expected process noise in odometry’s translation estimate from translation.
    alpha3: 0.1
    # Expected process noise in odometry’s translation estimate from rotation.
    alpha4: 0.05
    # Expected process noise in odometry's strafe estimate from translation.
    alpha5: 0.1
    # The name of the coordinate frame published by the localization system.
    global_frame_id: map
    # The name of the coordinate frame published by the odometry system.
    odom_frame_id: odom
    # The name of the coordinate frame of the robot base.
    base_frame_id: base_link
    # The name of the topic where the map is published by the map server.
    map_topic: map
    # The name of the topic where scans are being published.
    scan_topic: scan_filtered
    # The name of the topic where an initial pose can be published.
    # The particle filter will be reset using the provided pose with covariance.
    initial_pose_topic: initialpose
    # Maximum number of particles that will be used.
    max_particles: 4000 # 2000
    # Minimum number of particles that will be used.
    min_particles: 1500 # 500
    # Error allowed by KLD criteria.
    pf_err: 0.05
    # KLD criteria parameter.
    # Upper standard normal quantile for the probability that the error in the
    # estimated distribution is less than pf_err.
    pf_z: 3.0
    # Fast exponential filter constant, used to filter the average particles weights.
    # Random particles are added if the fast filter result is larger than the slow filter result
    # allowing the particle filter to recover from a bad approximation.
    recovery_alpha_fast: 0.1
    # Slow exponential filter constant, used to filter the average particles weights.
    # Random particles are added if the fast filter result is larger than the slow filter result
    # allowing the particle filter to recover from a bad approximation.
    recovery_alpha_slow: 0.001
    # Resample will happen after the amount of updates specified here happen.
    resample_interval: 1
    # Minimum angle difference from last resample for resampling to happen again.
    update_min_a: 0.1 # 0.2
    # Maximum angle difference from last resample for resampling to happen again.
    update_min_d: 0.05 # 0.25
    # Laser sensor model type.
    laser_model_type: likelihood_field
    # Maximum distance of an obstacle (if the distance is higher, this one will be used in the likelihood map).
    laser_likelihood_max_dist: 2.0
    # Maximum range of the laser.
    laser_max_range: 12.0
    # Maximum number of beams to use in the likelihood field sensor model.
    max_beams: 100
    # Weight used to combine the probability of hitting an obstacle.
    z_hit: 0.5
    # Weight used to combine the probability of random noise in perception.
    z_rand: 0.5
    # Weight used to combine the probability of getting short readings.
    z_short: 0.05
    # Weight used to combine the probability of getting max range readings.
    z_max: 0.05
    # Standard deviation of a gaussian centered around obstacles.
    sigma_hit: 0.2
    # Whether to broadcast map to odom transform or not.
    tf_broadcast: true
    # Transform tolerance allowed.
    transform_tolerance: 1.0
    # Execution policy used to apply the motion update and importance weight steps.
    # Valid options: "seq", "par".
    execution_policy: seq
    # Whether to set initial pose based on parameters.
    # When enabled, particles will be initialized with the specified pose coordinates and covariance.
    # set_initial_pose: true
    # # If false, AMCL will use the last known pose to initialize when a new map is received.
    # always_reset_initial_pose: false
    # # Set this to true when you want to load only the first published map from map_server and ignore subsequent ones.
    # first_map_only: false
    # # Initial pose x coordinate.
    # initial_pose.x: 0.0
    # # Initial pose y coordinate.
    # initial_pose.y: -2.0
    # # Initial pose yaw coordinate.
    # initial_pose.yaw: 0.0
    # # Initial pose xx covariance.
    # initial_pose.covariance_x: 0.25
    # # Initial pose yy covariance.
    # initial_pose.covariance_y: 0.25
    # # Initial pose yawyaw covariance.
    # initial_pose.covariance_yaw: 0.0685
    # # Initial pose xy covariance.
    # initial_pose.covariance_xy: 0.0
    # # Initial pose xyaw covariance.
    # initial_pose.covariance_xyaw: 0.0
    # # Initial pose yyaw covariance.
    # initial_pose.covariance_yyaw: 0.0

# amcl:
#   ros__parameters:
#     alpha1: 0.2
#     alpha2: 0.2
#     alpha3: 0.2
#     alpha4: 0.2
#     alpha5: 0.2
#     base_frame_id: "base_link"
#     beam_skip_distance: 0.5
#     beam_skip_error_threshold: 0.9
#     beam_skip_threshold: 0.3
#     do_beamskip: false
#     global_frame_id: "map"
#     lambda_short: 0.1
#     laser_likelihood_max_dist: 2.0
#     laser_max_range: 100.0
#     laser_min_range: -1.0
#     laser_model_type: "likelihood_field"
#     max_beams: 60
#     max_particles: 2000
#     min_particles: 500
#     odom_frame_id: "odom"
#     pf_err: 0.05
#     pf_z: 0.99
#     recovery_alpha_fast: 0.0
#     recovery_alpha_slow: 0.0
#     resample_interval: 1
#     robot_model_type: "nav2_amcl::DifferentialMotionModel"
#     save_pose_rate: 0.5
#     sigma_hit: 0.2
#     tf_broadcast: true
#     transform_tolerance: 1.0
#     update_min_a: 0.2
#     update_min_d: 0.25
#     z_hit: 0.5
#     z_max: 0.05
#     z_rand: 0.5
#     z_short: 0.05
#     scan_topic: scan_filtered # scan
#     set_initial_pose: true
#     always_reset_initial_pose: false
#     first_map_only: false
#     initial_pose:
#       x: -0.04770358241499002
#       y: -0.38432100674199055
#       z: 0.0
#       yaw: 3.14

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    default_nav_to_pose_bt_xml: "/home/ing/workspace/config/navigate_to_pose_w_replanning_goal_patience_and_recovery.xml"
    default_nav_through_poses_bt_xml: "/home/ing/workspace/config/navigate_through_poses_w_replanning_and_recovery.xml"
    # default_nav_through_poses_bt_xml: "/home/ing/workspace/config/navigate_through_pose_w_replanning_goal_patience_and_recovery.xml"

    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_are_error_codes_active_condition_bt_node
      - nav2_would_a_controller_recovery_help_condition_bt_node
      - nav2_would_a_planner_recovery_help_condition_bt_node
      - nav2_would_a_smoother_recovery_help_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code

controller_server:
  ros__parameters:
    controller_frequency: 30.0
    min_x_velocity_threshold: 0.2 # 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.1 # 0.001
    failure_tolerance: 500.0 # 0.2
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker", "home_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath_VP", "FollowPath_SVP", "FollowPath_MPPI"]
    use_realtime_priority: false
    # speed_limit_topic: "/speed_limit"

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05
      movement_time_allowance: 180.0 # 5.0
    # Goal checker parameters
    #precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25 # 0.5
      yaw_goal_tolerance: 3.15 #0.175

    home_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25 # 0.5
      yaw_goal_tolerance: 0.175 # 0.785

    FollowPath_VP:
      plugin: "nav2_ing_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.7
      lookahead_dist: 0.9 # 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 2.0 # 1.0 # 0.5 #1.8
      transform_tolerance: 0.2 # 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 1.8 # 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.6 # 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9 # 0.1 # 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.3 # 0.785
      max_angular_accel: 3.0 #1.5 # 0.5 #3.2
      max_robot_pose_search_dist: 2.0 # 10.0


    FollowPath_SVP:
      plugin: "nav2_ing_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.7
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 2.0 # 1.0 # 0.5 #1.8
      transform_tolerance: 0.2 # 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 1.8 # 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 0.7 # 0.5 # 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.6 # 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.1 # 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.3 # 0.785
      max_angular_accel: 3.0 #1.5 # 0.5 #3.2
      max_robot_pose_search_dist: 10.0

      # plugin: "vector_pursuit_controller::VectorPursuitController"
      # k: 5.0
      # desired_linear_vel: 1.2
      # min_turning_radius: 0.25
      # lookahead_dist: 0.3 #1.0 # 0.3이 최소값
      # min_lookahead_dist: 0.5
      # max_lookahead_dist: 1.5
      # lookahead_time: 0.2 #1.5
      # rotate_to_heading_angular_vel: 0.5
      # transform_tolerance: 0.1
      # use_velocity_scaled_lookahead_dist: false
      # min_linear_velocity: 0.0
      # min_approach_linear_velocity: 0.05
      # approach_velocity_scaling_dist: 0.5
      # max_allowed_time_to_collision_up_to_target: 1.0
      # use_collision_detection: true
      # use_cost_regulated_linear_velocity_scaling: true
      # cost_scaling_dist: 0.5
      # cost_scaling_gain: 1.0
      # inflation_cost_scaling_factor: 3.0
      # use_rotate_to_heading: true
      # allow_reversing: false
      # rotate_to_heading_min_angle: 0.5
      # max_angular_accel: 3.0
      # max_linear_accel: 2.0
      # max_lateral_accel: 0.2
      # max_robot_pose_search_dist: 10.0
      # use_interpolation: true
      # use_heading_from_path: false
      # approach_velocity_scaling_dist: 1.0

    # DWB parameters
    FollowPath_MPPI:
      # plugin: "nav2_rotation_shim_controller::RotationShimController"
      # # primary_controller: "dwb_core::DWBLocalPlanner"
      # primary_controller: "nav2_mppi_controller::MPPIController"
      # angular_dist_threshold: 0.785
      # forward_sampling_distance: 0.5
      # rotate_to_heading_angular_vel: 0.5 # 1.0
      # max_angular_accel: 3.2
      # simulate_ahead_time: 1.0
      # rotate_to_goal_heading: false

      # plugin: "roxy_rotation_shim_controller::RotationShimController"
      # primary_controller: "dwb_core::DWBLocalPlanner"
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 40 # 2sec # 30 # 60
      model_dt: 0.05
      batch_size: 2000
      vx_std: 0.8 # 0.2
      vy_std: 0.2
      wz_std: 0.4
      vx_max: 1.2 # 2.2 # 1.0 # 0.5
      vx_min: -0.1 # -0.2 # -0.35
      vy_max: 0.5
      wz_max: 7.0 # 2.0 # 0.5
      ax_max: 3.0 # 3.0
      ax_min: -2.5 # -3.0
      ay_max: 3.0
      az_max: 7.0
      iteration_count: 1
      prune_distance: 0.7 # 3.5 # 3.0
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive"
      visualize: false
      #reset_period: 1.0 # (only in Humble)
      regenerate_noises: false
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      AckermannConstraints:
        min_turning_r: 0.2
      critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.7 # 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.5
      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 0.5
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5
        critical_weight: 20.0
        consider_footprint: false
        collision_cost: 10000.0
        collision_margin_distance: 0.2 # 0.1
        near_goal_distance: 0.5
        #inflation_radius: 0.55 # (only in Humble)
        #cost_scaling_factor: 10.0 # (only in Humble)

      # CostCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 3.81
      #   critical_cost: 300.0
      #   consider_footprint: true
      #   collision_cost: 1000000.0
      #   near_goal_distance: 1.0
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 30.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 3
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0
      # VelocityDeadbandCritic:
      #   enabled: true
      #   cost_power: 1
      #   cost_weight: 35.0
      #   deadband_velocities: [0.1, 0.5, 1.0]
      # TwirlingCritic:
      #   enabled: true
      #   twirling_cost_power: 1
      #   twirling_cost_weight: 10.0

      # plugin: "dwb_core::DWBLocalPlanner"
      # debug_trajectory_details: False
      # min_vel_x: 0.0
      # min_vel_y: 0.0
      # max_vel_x: 2.2 # 0.5
      # max_vel_y: 0.0
      # max_vel_theta: 1.5
      # min_speed_xy: 0.0
      # max_speed_xy: 2.2 # 0.5
      # min_speed_theta: 0.0
      # # Add high threshold velocity for turtlebot 3 issue.
      # # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      # acc_lim_x: 1.0 # 0.06 # 0.12
      # acc_lim_y: 0.0
      # acc_lim_theta: 2.0
      # decel_lim_x: -1.5 # -0.2
      # decel_lim_y: 0.0
      # decel_lim_theta: -2.0
      # vx_samples: 50
      # vy_samples: 0
      # vtheta_samples: 50
      # sim_time: 1.7
      # linear_granularity: 0.5 # 0.0025
      # angular_granularity: 0.02 # 0.01
      # transform_tolerance: 0.2
      # # xy_goal_tolerance: 0.2
      # # shorten_transformed_plan: False
      # trans_stopped_velocity: 0.1
      # short_circuit_trajectory_evaluation: True
      # stateful: True
      # critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      # BaseObstacle.scale: 0.3
      # PathAlign.scale: 50.0 # 43.0
      # PathAlign.forward_point_distance: 0.1
      # GoalAlign.scale: 24.0
      # GoalAlign.forward_point_distance: 0.1
      # PathDist.scale: 80.0 # 43.0
      # GoalDist.scale: 32.0
      # RotateToGoal.scale: 80.0 # 32.0
      # RotateToGoal.slowing_factor: 10.0
      # RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 4
      height: 4
      resolution: 0.05
      robot_radius: 0.35 # 0.3
      # plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      # obstacle_layer:
      #   plugin: "nav2_costmap_2d::ObstacleLayer"
      #   enabled: True
      #   observation_sources: scan pointcloud
      #   footprint_clearing_enabled: True
      #   max_obstacle_height: 1.4
      #   combination_method: 1
      #   scan:
      #     topic: "/scan"
      #     max_obstacle_height: 1.4
      #     clearing: True
      #     marking: True
      #     data_type: "LaserScan"
      #     raytrace_max_range: 20.0
      #     raytrace_min_range: 0.0
      #     obstacle_max_range: 10.0
      #     obstacle_min_range: 0.0
      #   pointcloud:
      #     topic: "/camera/camera/depth/color/points"
      #     max_obstacle_height: 1.4
      #     min_obstacle_height: 0.0
      #     raytrace_max_range: 2.0
      #     raytrace_min_range: 0.0
      #     obstacle_max_range: 1.5
      #     obstacle_min_range: 0.0
      #     clearing: True
      #     marking: True
      #     data_type: "PointCloud2"
      # plugins: ["static_layer", "obstacle_layer", "nonpersisting_obstacle_layer", "range_layer2", "range_layer3", "range_layer4", "range_layer1", "inflation_layer"]
      # plugins: ["static_layer", "obstacle_layer", "nonpersisting_obstacle_layer", "range_layer1", "range_layer4", "inflation_layer"]
      # plugins: ["static_layer", "obstacle_layer", "nonpersisting_obstacle_layer", "inflation_layer", "us_obstacle_layer", "us_inflation_layer"]
      plugins: ["static_layer", "obstacle_layer", "nonpersisting_obstacle_layer", "us_obstacle_layer", "inflation_layer"]
      # filters: ["keepout_filter", "inflation_layer"]
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        combination_method: 1
        scan:
          topic: /scan_filtered # "/scan"
          max_obstacle_height: 1.4
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 20.0
          raytrace_min_range: 0.0
          obstacle_max_range: 10.0
          obstacle_min_range: 0.0
        # us1_scan:
        #   topic: /roxi/us1_scan
        #   max_obstacle_height: 1.0
        #   clearing: True
        #   marking: True
        #   data_type: "LaserScan"
        #   raytrace_max_range: 1.0
        #   raytrace_min_range: 0.0
        #   obstacle_max_range: 0.8
        #   obstacle_min_range: 0.0
        # us2_scan:
        #   topic: /roxi/us2_scan
        #   max_obstacle_height: 0.5
        #   clearing: True
        #   marking: True
        #   data_type: "LaserScan"
        #   raytrace_max_range: 1.0
        #   raytrace_min_range: 0.0
        #   obstacle_max_range: 0.8
        #   obstacle_min_range: 0.0
        # us3_scan:
        #   topic: /roxi/us3_scan
        #   max_obstacle_height: 0.5
        #   clearing: True
        #   marking: True
        #   data_type: "LaserScan"
        #   raytrace_max_range: 1.0
        #   raytrace_min_range: 0.0
        #   obstacle_max_range: 0.8
        #   obstacle_min_range: 0.0
      nonpersisting_obstacle_layer:
        plugin: nav2_costmap_2d/NonPersistentVoxelLayer
        enabled:              true
        track_unknown_space:  true
        max_obstacle_height:  2.0
        unknown_threshold:    30
        mark_threshold:       0
        combination_method:   1
        obstacle_range: 1.5
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16 # 100
        publish_voxel_map: true
        observation_sources: pointcloud  # us1_scan us2_scan
        # scan:
        #   data_type: LaserScan
        #   topic: /scan
        #   marking: true
        #   min_obstacle_height: 0.0
        #   max_obstacle_height: 10.0
        pointcloud:
          data_type: PointCloud2
          # topic: /camera/camera/depth/color/points
          topic: /pcl_out
          marking: true
          min_obstacle_height: 0.0
          max_obstacle_height: 1.5
        # us1_scan:
        #   data_type: LaserScan
        #   topic: /roxi/us1_scan
        #   marking: true
        #   min_obstacle_height: 0.0
        #   max_obstacle_height: 1.5
        # us2_scan:
        #   data_type: LaserScan
        #   topic: /roxi/us2_scan
        #   marking: true
        #   min_obstacle_height: 0.0
        #   max_obstacle_height: 1.5
        # us3_scan:
        #   data_type: LaserScan
        #   topic: /roxi/us3_scan
        #   marking: true
        #   min_obstacle_height: 0.0
        #   max_obstacle_height: 1.5
      us_obstacle_layer:
        plugin: nav2_costmap_2d/NonPersistentVoxelLayer
        enabled:              true
        track_unknown_space:  true
        max_obstacle_height:  2.0
        unknown_threshold:    1
        mark_threshold:       0
        combination_method:   1
        obstacle_range: 1.5
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16 # 100
        publish_voxel_map: true
        observation_sources: us3_scan us1_scan us2_scan
        us1_scan:
          data_type: LaserScan
          topic: /roxi/us1_scan
          marking: true
          min_obstacle_height: 0.0
          max_obstacle_height: 1.5
        us2_scan:
          data_type: LaserScan
          topic: /roxi/us2_scan
          marking: true
          min_obstacle_height: 0.0
          max_obstacle_height: 1.5
        us3_scan:
          data_type: LaserScan
          topic: /roxi/us3_scan
          marking: true
          min_obstacle_height: 0.0
          max_obstacle_height: 1.5
      # denoise_layer:
      #   plugin: "nav2_costmap_2d::DenoiseLayer"
      #   enabled: True
      # range_layer1:
      #   plugin: "nav2_costmap_2d::RangeSensorLayer"
      #   enabled: True
      #   # topics: ["/roxi/us1", "/roxi/us2", "/roxi/us3", "/roxi/us4"]
      #   topics: ["/roxi/us1"]
      #   phi: 1.0472
      #   inflate_cone: 1.0
      #   no_readings_timeout: 0.0
      #   clear_threshold: 0.2
      #   mark_threshold: 0.8
      #   clear_on_max_reading: True
      #   input_sensor_type: ALL
      # range_layer2:
      #   plugin: "nav2_costmap_2d::RangeSensorLayer"
      #   enabled: True
      #   topics: ["/roxi/us2"]
      #   phi: 1.0472
      #   inflate_cone: 1.0
      #   no_readings_timeout: 0.0
      #   clear_threshold: 0.2
      #   mark_threshold: 0.8
      #   clear_on_max_reading: True
      #   input_sensor_type: ALL
      # range_layer3:
      #   plugin: "nav2_costmap_2d::RangeSensorLayer"
      #   enabled: True
      #   topics: ["/roxi/us3"]
      #   phi: 1.0472
      #   inflate_cone: 1.0
      #   no_readings_timeout: 0.0
      #   clear_threshold: 0.2
      #   mark_threshold: 0.8
      #   clear_on_max_reading: True
      #   input_sensor_type: ALL
      # range_layer4:
      #   plugin: "nav2_costmap_2d::RangeSensorLayer"
      #   enabled: True
      #   topics: ["/roxi/us4"]
      #   phi: 1.0472
      #   inflate_cone: 1.0
      #   no_readings_timeout: 0.0
      #   clear_threshold: 0.2
      #   mark_threshold: 0.8
      #   clear_on_max_reading: True
      #   input_sensor_type: ALL
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.3 # 0.4 # 0.5
      us_inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.2
      # range_inflation_layer:
      #   plugin: "nav2_costmap_2d::InflationLayer"
      #   cost_scaling_factor: 5.0
      #   inflation_radius: 0.7
      # voxel_layer:
      #   plugin: "nav2_costmap_2d::VoxelLayer"
      #   enabled: True
      #   publish_voxel_map: True
      #   origin_z: 0.0
      #   z_resolution: 0.05
      #   z_voxels: 16
      #   max_obstacle_height: 2.0
      #   mark_threshold: 0
      #   observation_sources: scan
      #   scan:
      #     topic: /scan
      #     max_obstacle_height: 2.0
      #     clearing: True
      #     marking: True
      #     data_type: "LaserScan"
      #     raytrace_max_range: 3.0
      #     raytrace_min_range: 0.0
      #     obstacle_max_range: 2.5
      #     obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      robot_radius: 0.3
      resolution: 0.05
      track_unknown_space: true
      unknown_cost_value: 1
      # plugins: ["static_layer", "obstacle_layer", "nonpersisting_obstacle_layer", "inflation_layer"]
      plugins: ["static_layer", "obstacle_layer", "clear_goal_layer", "clear_prevgoal_layer", "clear_posgoal_layer", "inflation_layer"]
      filters: ["speed_filter"] # ["keepout_filter", "inflation_layer"]
      speed_filter:
        plugin: "nav2_costmap_2d::SpeedFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
        speed_limit_topic: "/speed_limit"
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan # pointcloud
        combination_method: 1
        scan:
          topic: /scan_filtered # /scan
          max_obstacle_height: 1.4
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 4.0 # 40.0
          raytrace_min_range: 0.0
          obstacle_max_range: 3.5 # 30.0
          obstacle_min_range: 0.0
        # pointcloud:
        #   topic: "/camera/camera/depth/color/points"
        #   max_obstacle_height: 1.4
        #   min_obstacle_height: 0.0
        #   raytrace_max_range: 2.0
        #   raytrace_min_range: 0.0
        #   obstacle_max_range: 1.5
        #   obstacle_min_range: 0.0
        #   data_type: "PointCloud2"
      nonpersisting_obstacle_layer:
        plugin: nav2_costmap_2d/NonPersistentVoxelLayer
        enabled:              true
        track_unknown_space:  true
        max_obstacle_height:  2.0
        unknown_threshold:    1
        mark_threshold:       0
        combination_method:   1
        obstacle_range: 1.5
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16 # 100
        publish_voxel_map: true
        observation_sources: pointcloud
        # scan:
        #   data_type: LaserScan
        #   topic: /scan
        #   marking: true
        #   min_obstacle_height: 0.0
        #   max_obstacle_height: 10.0
        pointcloud:
          data_type: PointCloud2
          topic: /camera/camera/depth/color/points
          marking: true
          min_obstacle_height: 0.0
          max_obstacle_height: 1.5
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      # denoise_layer:
      #   plugin: "nav2_costmap_2d::DenoiseLayer"
      #   enabled: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 4.5
        inflation_radius: 0.6 # 0.4 # 0.6
      clear_goal_layer:
        plugin: "nav2_clear_goal_plugin/ClearGoal"
        enabled: True
        goal_x: 10000.0
        goal_y: 10000.0
        radius: 1.0
      clear_prevgoal_layer:
        plugin: "nav2_clear_goal_plugin/ClearGoal"
        enabled: True
        goal_x: 10000.0
        goal_y: 10000.0
        radius: 1.0
      clear_posgoal_layer:
        plugin: "nav2_clear_goal_plugin/ClearGoal"
        enabled: True
        goal_x: 10000.0
        goal_y: 10000.0
        radius: 1.0
      always_send_full_costmap: True

# The yaml_filename does not need to be specified since it going to be set by defaults in launch.
# If you'd rather set it in the yaml, remove the default "map" value in the tb3_simulation_launch.py
# file & provide full path to map below. If CLI map configuration or launch default is provided, that will be used.
# map_server:
#   ros__parameters:
#     yaml_filename: "/home/ing/ros_ws/maps/map.yaml"

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.1
    occupied_thresh_default: 0.2
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    planner_plugins: ["GridBased"]
    GridBased:
      # plugin: "nav2_straightline_planner/StraightLine"
      # interpolation_resolution: 0.1
      # plugin: "nav2_navfn_planner/NavfnPlanner"
      # tolerance: 0.5
      # use_astar: false
      # allow_unknown: false
      plugin: "nav2_theta_star_ing_planner/ThetaStarIngPlanner"
      # plugin: "nav2_theta_star_planner/ThetaStarPlanner"
      how_many_corners: 8
      w_euc_cost: 1.0
      w_traversal_cost: 2.0
      w_heuristic_cost: 1.0
      # # plugin: "nav2_smac_planner/SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
      # plugin: "nav2_ing_smac_planner/SmacPlanner2D" # In Iron and older versions, "/" was used instead of "::"
      # tolerance: 0.125                      # tolerance for planning if unable to reach exact pose, in meters
      # downsample_costmap: false             # whether or not to downsample the map
      # downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      # allow_unknown: true                   # allow traveling in unknown space
      # max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      # max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      # max_planning_time: 2.0                # max time in s for planner to plan, smooth
      # cost_travel_multiplier: 2.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      # use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      # smoother:
      #   max_iterations: 1000
      #   w_smooth: 0.3
      #   w_data: 0.2
      #   tolerance: 1.0e-10

# smoother_server:
#   ros__parameters:
#     smoother_plugins: ["simple_smoother"]
#     simple_smoother:
#       plugin: "nav2_smoother::SimpleSmoother"
#       tolerance: 1.0e-10
#       max_its: 1000
#       do_refinement: True

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_tolerance: 0.5
    simulate_ahead_time: 1.0 # 2.0
    max_rotational_vel: 0.7 # 0.7 # 0.3 # 1.0
    min_rotational_vel: 0.4 # 0.2 # 0.4
    # rotational_acc_lim: 0.5 # 0.1 # 3.2
    rotational_acc_lim: 0.3 # 0.1 # 0.1 # 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: False
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    smoothing_frequency: 50.0 #20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    # max_velocity: [0.5, 0.0, 4.0]       # high:[1.2, 0.0, 1.0],   middle:[0.6, 0.0, 0.7],   low:[0.5, 0.0, 0.5]
    # min_velocity: [-0.5, 0.0, -4.0]     # high:[-1.2, 0.0, -1.0], middle:[-0.6, 0.0, -0.7], low:[-0.5, 0.0, -0.5]
    # max_accel: [0.1, 0.0, 4.0]         # [0.05, 0.0, 1.0]
    # max_decel: [-0.7, 0.0, -4.0]        # high:[-0.7, 0.0, -1.0], middle:[-0.5, 0.0, -1.0], low:[-0.5, 0.0, -1.0]
    max_velocity: [0.7, 0.0, 1.0] # [1.2, 0.0, 1.0] # [1.2, 0.0, 1.5]       # high:[1.2, 0.0, 1.0],   middle:[0.6, 0.0, 0.7],   low:[0.5, 0.0, 0.5]
    min_velocity: [-0.03, 0.0, -1.0] # [-0.03, 0.0, -1.5]     # high:[-1.2, 0.0, -1.0], middle:[-0.6, 0.0, -0.7], low:[-0.5, 0.0, -0.5]
    max_accel: [0.1, 0.0, 4.0]         # [0.05, 0.0, 1.0]
    max_decel: [-0.7, 0.0, -4.0] # [-1.2, 0.0, -4.0] # [-0.7, 0.0, -4.0]        # high:[-0.7, 0.0, -1.0], middle:[-0.5, 0.0, -1.0], low:[-0.5, 0.0, -1.0]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

# ing_collision_detector:
#   ros__parameters:
#     frequency: 3.0 # 10.0
#     base_frame_id: "base_link"
#     odom_frame_id: "odom"
#     transform_tolerance: 0.5
#     source_timeout: 5.0
#     base_shift_correction: True
#     polygons: ["PolygonFront"]
#     PolygonFront:
#       type: "polygon"
#       points: [1.0, 0.3, 1.0, -0.3, 0.0, -0.3, 0.0, 0.3]
#       action_type: "none"
#       min_points: 1 # 4
#       visualize: True
#       polygon_pub_topic: "polygon_front"
#       enabled: True
#     observation_sources: ["us1_scan", "pointcloud"] # ["scan", "pointcloud"]
#     # scan:
#     #   type: "scan"
#     #   topic: "/scan_filtered"
#     #   enabled: True
#     us1_scan:
#       type: "scan"
#       topic: "/roxi/us1_scan"
#       enabled: True
#     pointcloud:
#       type: "pointcloud"
#       topic: "/camera/camera/depth/color/points"
#       min_height: 0.1
#       max_height: 0.5
#       enabled: True
# collision_monitor:
#   ros__parameters:
#     base_frame_id: "base_link"
#     odom_frame_id: "odom"
#     cmd_vel_in_topic: "cmd_vel_smoothed"
#     cmd_vel_out_topic: "cmd_vel_last"
#     transform_tolerance: 0.1
#     source_timeout: 2.0
#     base_shift_correction: True
#     stop_pub_timeout: 5.0
#     # Polygons represent zone around the robot for "stop" and "slowdown" action types,
#     # and robot footprint for "approach" action type.
#     # Footprint could be "polygon" type with dynamically set footprint from footprint_topic
#     # or "circle" type with static footprint set by radius. "footprint_topic" parameter
#     # to be ignored in circular case.
#     # polygons: ["PolygonStop", "PolygonSlow", "FootprintApproach"]
#     polygons: ["PolygonStop", "PolygonSlow"]
#     PolygonStop:
#       type: "polygon"
#       # points: [[0.382, 0.250], [0.382, -0.250], [0.0, 0.0], [0.0, 0.0]]
#       # points: [0.382, 0.250, 0.382, -0.250, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.382, 0.282, 0.382, -0.282, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.382, 0.275, 0.382, -0.275, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.305, 0.285, 0.305, -0.285, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.295, 0.285, 0.295, -0.285, 0.0, 0.0, 0.0, 0.0]
#       points: [0.0, 0.285, 0.295, 0.285, 0.295, -0.285, 0.0, -0.285]
#       # radius: 0.382
#       action_type: "stop"
#       min_points: 3 # max_points: 3 for Humble
#       visualize: True
#       polygon_pub_topic: "polygon_stop"
#       enabled: True
#     PolygonSlow:
#       type: "polygon"
#       # points: [[0.482, 0.250], [0.482, -0.250], [0.0, 0.0], [0.0, 0.0]]
#       # points: [0.482, 0.250, 0.482, -0.250, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.482, 0.15, 0.482, -0.15, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.482, 0.285, 0.482, -0.285, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.335, 0.295, 0.335, -0.295, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.305, 0.285, 0.305, -0.285, 0.0, 0.0, 0.0, 0.0]
#       points: [0.0, 0.285, 0.405, 0.285, 0.405, -0.285, 0.0, -0.285]

#       # points: [0.482, 0.285, 0.482, -0.285, 0.0, 0.0, 0.0, 0.0]
#       # points: [0.482, 0.2, 0.482, -0.2, 0.0, 0.0, 0.0, 0.0]
#       # radius: 0.482
#       action_type: "slowdown"
#       min_points: 4  # max_points: 3 for Humble
#       slowdown_ratio: 0.2
#       visualize: True
#       polygon_pub_topic: "polygon_slowdown"
#       enabled: True
#     # PolygonLimit:
#     #   type: "polygon"
#     #   points: [[0.5, 0.5], [0.5, -0.5], [-0.5, -0.5], [-0.5, 0.5]]
#     #   action_type: "limit"
#     #   min_points: 4  # max_points: 3 for Humble
#     #   linear_limit: 0.4
#     #   angular_limit: 0.5
#     #   visualize: True
#     #   polygon_pub_topic: "polygon_limit"
#     #   enabled: True
#     FootprintApproach:
#       type: "polygon"
#       action_type: "approach"
#       footprint_topic: "/local_costmap/published_footprint"
#       time_before_collision: 2.0
#       simulation_time_step: 0.1
#       min_points:  6  # max_points: 5 for Humble
#       visualize: False
#       enabled: True
#     observation_sources: ["scan", "pointcloud"]
#     scan:
#       source_timeout: 0.2
#       type: "scan"
#       topic: scan_filtered # "/scan"
#       enabled: True
#     pointcloud:
#       type: "pointcloud"
#       topic: "/camera/camera/depth/color/points"
#       min_height: 0.0
#       max_height: 1.4
#       enabled: True
